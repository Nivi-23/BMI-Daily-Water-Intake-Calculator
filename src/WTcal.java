
import java.awt.Color;
import java.awt.Frame;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.text.DecimalFormat;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTextField;



/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Kinthu
 */
public class WTcal extends javax.swing.JFrame {

    /**
     * Creates new form WTcal
     */
    public WTcal() {
        
        //Set Jframe to transparent background
        setUndecorated(true);
        setBackground(new Color(0.0f,0.0f,0.0f,0.0f));
        
        
        
        
        initComponents();
        imgsad.setVisible(false);
        txtKg.setEnabled(false);
        txtcm.setEnabled(false);
        txtPounds.setEnabled(false);
        txtFeet.setEnabled(false);
        txtInches.setEnabled(false);
        txtAge.setEnabled(false);
        cmbActivity.setEnabled(false);
        
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        pnlContainer = new javax.swing.JPanel();
        btnClose = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        lblDwakeup = new javax.swing.JLabel();
        lblDAexercise = new javax.swing.JLabel();
        lblDAbreakfast = new javax.swing.JLabel();
        lblD10_11 = new javax.swing.JLabel();
        lblDblunch = new javax.swing.JLabel();
        lblDAlunch = new javax.swing.JLabel();
        lblD12_1 = new javax.swing.JLabel();
        lblDAdinner = new javax.swing.JLabel();
        lblD3_5 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblKg = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblcm = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        cmbUnits = new javax.swing.JComboBox();
        txtKg = new javax.swing.JTextField();
        txtcm = new javax.swing.JTextField();
        txtPounds = new javax.swing.JTextField();
        txtFeet = new javax.swing.JTextField();
        txtAge = new javax.swing.JTextField();
        txtInches = new javax.swing.JTextField();
        cmbActivity = new javax.swing.JComboBox();
        btnCalculate = new javax.swing.JButton();
        btnClearall = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        lblDkg = new javax.swing.JLabel();
        lblDlbs = new javax.swing.JLabel();
        lblDcm = new javax.swing.JLabel();
        lblDm = new javax.swing.JLabel();
        lblDFeet = new javax.swing.JLabel();
        lblDbmi = new javax.swing.JLabel();
        lblDwaterintake = new javax.swing.JLabel();
        lblDbmidesc = new javax.swing.JLabel();
        lblDliters = new javax.swing.JLabel();
        lblDcups = new javax.swing.JLabel();
        imgsad = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 0, -1, 140));

        jLabel1.setToolTipText("");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pnlContainer.setBackground(new java.awt.Color(255, 255, 255));
        pnlContainer.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnlContainer.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                pnlContainerMouseDragged(evt);
            }
        });
        pnlContainer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlContainerMouseClicked(evt);
            }
        });
        pnlContainer.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnClose.setBackground(new java.awt.Color(255, 255, 255));
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        pnlContainer.add(btnClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 20, 20, 20));

        jPanel3.setBackground(new java.awt.Color(0, 102, 204));
        jPanel3.setPreferredSize(new java.awt.Dimension(820, 1));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1160, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1, Short.MAX_VALUE)
        );

        pnlContainer.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 62, 1160, 1));

        jLabel3.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(153, 153, 153));
        jLabel3.setText("BMI & Daily Water Intake Calculator");
        pnlContainer.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 0, 640, 60));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Daily water Intake Schedule", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 0, 14), new java.awt.Color(0, 51, 204))); // NOI18N

        jLabel20.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel20.setText("After Wakeup:");

        jLabel22.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel22.setText("After Exercise:");

        jLabel23.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel23.setText("After Breakfast:");

        jLabel24.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel24.setText("10.00 am - 11.00 am:");

        jLabel25.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel25.setText("11.00 am - 1.00 pm:");

        jLabel26.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel26.setText("After Lunch:");

        jLabel27.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel27.setText("Before Lunch:");

        jLabel28.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel28.setText("3.00 pm - 5.00 pm:");

        jLabel30.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel30.setText("After Dinner:");

        lblDwakeup.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        lblDwakeup.setText("-");

        lblDAexercise.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        lblDAexercise.setText("-");

        lblDAbreakfast.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        lblDAbreakfast.setText("-");

        lblD10_11.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        lblD10_11.setText("-");

        lblDblunch.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        lblDblunch.setText("-");

        lblDAlunch.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        lblDAlunch.setText("-");

        lblD12_1.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        lblD12_1.setText("-");

        lblDAdinner.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        lblDAdinner.setText("-");

        lblD3_5.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        lblD3_5.setText("-");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel28)
                            .addComponent(jLabel30))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblD3_5, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                            .addComponent(lblDAdinner, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel24)
                            .addComponent(jLabel25))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblD12_1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblD10_11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel27)
                            .addComponent(jLabel26))
                        .addGap(56, 56, 56)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDblunch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblDAlunch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel22)
                            .addComponent(jLabel20)
                            .addComponent(jLabel23))
                        .addGap(48, 48, 48)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDAexercise, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblDAbreakfast, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblDwakeup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(lblDwakeup))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(lblDAexercise))
                .addGap(11, 11, 11)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(lblDAbreakfast))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(lblD10_11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(lblD12_1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(lblDblunch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(lblDAlunch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(lblD3_5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDAdinner)
                    .addComponent(jLabel30))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pnlContainer.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 80, 390, 500));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Your Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 0, 14), new java.awt.Color(0, 51, 204))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Units:");
        jLabel4.setName(""); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Weight:");

        lblKg.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblKg.setText("kg");

        jLabel6.setText("Pounds(lbs)");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Height:");

        lblcm.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblcm.setText("cm");
        lblcm.setName("lblCm"); // NOI18N

        jLabel8.setText("Feet");

        jLabel9.setText("Inches");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Age:");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Activity:");

        cmbUnits.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        cmbUnits.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "Metric (Kg - cm)", "Imperial (Lbs - Inch)" }));
        cmbUnits.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbUnitsActionPerformed(evt);
            }
        });

        txtKg.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        txtKg.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtKgKeyPressed(evt);
            }
        });

        txtcm.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N

        txtPounds.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N

        txtFeet.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N

        txtAge.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N

        txtInches.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N

        cmbActivity.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        cmbActivity.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "No Activity", "Activity 30mins", "Activity 1hour" }));
        cmbActivity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbActivityActionPerformed(evt);
            }
        });

        btnCalculate.setBackground(new java.awt.Color(0, 153, 255));
        btnCalculate.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btnCalculate.setForeground(new java.awt.Color(255, 255, 255));
        btnCalculate.setText("Calculate");
        btnCalculate.setBorderPainted(false);
        btnCalculate.setDoubleBuffered(true);
        btnCalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalculateActionPerformed(evt);
            }
        });

        btnClearall.setBackground(new java.awt.Color(0, 153, 255));
        btnClearall.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btnClearall.setForeground(new java.awt.Color(255, 255, 255));
        btnClearall.setText("Clear");
        btnClearall.setBorderPainted(false);
        btnClearall.setDoubleBuffered(true);
        btnClearall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearallActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbUnits, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(lblKg, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel6))
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(txtKg, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtPounds, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(32, 32, 32)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblcm, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtcm, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFeet, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(txtInches, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(27, 27, 27)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnCalculate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbActivity, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnClearall, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addGap(21, 21, 21))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cmbUnits, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblKg)
                    .addComponent(jLabel6))
                .addGap(2, 2, 2)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(47, 47, 47)
                        .addComponent(jLabel7))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtKg, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPounds, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblcm)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtcm, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFeet, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtInches, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(cmbActivity, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnCalculate, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClearall, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
        );

        pnlContainer.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 310, 500));

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Results", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 0, 14), new java.awt.Color(0, 51, 204))); // NOI18N

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Wieght In KG:");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Weight In Pounds(lbs):");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("Height In cm:");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("Height In m:");

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setText("Height In Feet & Inches:");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setText("Body Mass Index (BMI) is :");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setText("Daily intake water Is:");

        lblDkg.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        lblDkg.setText("-");

        lblDlbs.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        lblDlbs.setText("-");

        lblDcm.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        lblDcm.setText("-");

        lblDm.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        lblDm.setText("-");

        lblDFeet.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        lblDFeet.setText("-");

        lblDbmi.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        lblDbmi.setText("-");

        lblDwaterintake.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        lblDwaterintake.setText("-");

        lblDbmidesc.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        lblDbmidesc.setText("-");

        lblDliters.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        lblDliters.setText("-");

        lblDcups.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        lblDcups.setText("-");

        imgsad.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sad.png"))); // NOI18N
        imgsad.setToolTipText("");
        imgsad.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/happy.png"))); // NOI18N
        imgsad.setDoubleBuffered(true);
        imgsad.setFocusable(false);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblDbmidesc, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(imgsad))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15)
                            .addComponent(jLabel16))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDlbs, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                            .addComponent(lblDcm, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblDm, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblDFeet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblDkg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addGap(18, 18, 18)
                        .addComponent(lblDbmi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblDcups, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                            .addComponent(lblDliters, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblDwaterintake, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(lblDkg))
                .addGap(12, 12, 12)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(lblDlbs))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(lblDcm))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(lblDm))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(lblDFeet))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(lblDbmi))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDbmidesc, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(imgsad, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(lblDwaterintake))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblDcups)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblDliters)
                .addContainerGap(133, Short.MAX_VALUE))
        );

        pnlContainer.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 80, 370, 500));

        jLabel19.setFont(new java.awt.Font("Century Gothic", 3, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(102, 102, 102));
        jLabel19.setText("Miss. R. Nivitha, SEU.IS.17.ICT.061, Department Of Information Technology, Fuculty Of Technology");
        pnlContainer.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 580, 680, 30));

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setToolTipText("");
        jButton1.setBorder(null);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        pnlContainer.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 20, 20, 20));

        getContentPane().add(pnlContainer, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 1110, 620));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    //Declare Varialbles
    float height_in_m,weight,cm,feet,con_feet,inches,kg,age,bmi,ounce,
            cups,liters,pounds,con_pounds,
            con_cm,con_inches,con_kg,activity,onekg_pnd=2.205f,activity_cups=0;
    int isnull;
    
    //schedule water intake
    private void water_schedule()
    {
        //declare and initialize variables for waater schedule
        int hasactivity=0;
        float wakeup=0,bexercise=0,aexercise=0,abreakfast=1,t10_11=1,t_12_1=0,blunch=1,alunch=1,t_3_5=0,adinner=1;
        
        //set wakeup cups of water accordin therir BMI
        if (bmi<18.5) 
        {
            wakeup=2;
        }
        else if (bmi>18.5 && bmi<=24.9) 
        {
            wakeup=2;
        }
         else if (bmi>=25 && bmi<=29.9) 
        {
            wakeup=3;            
        }
        else if (bmi>=30) 
        {
            wakeup=3;
        }  
        
        //get doing daily workout activity or not
        if (cmbActivity.getSelectedIndex()==1) {
            hasactivity=0;
            activity_cups=0.0f;
        }
        else if (cmbActivity.getSelectedIndex()==2) {
            hasactivity=1;
            activity_cups=12f/8;
        }
        else if (cmbActivity.getSelectedIndex()==3) {
            hasactivity=1;
            activity_cups=24f/8;
        }
        
        //Display accordin hasactivity variable
        if (hasactivity==0) {
            activity_cups=0;
            
            //set excercise cups of water 
            bexercise=activity_cups/2;
            aexercise=activity_cups/2;

            //find remaining cups of water
            float remaining_cups=cups-wakeup-abreakfast-t10_11-blunch-alunch-adinner-activity_cups;
            
            //Display remaining cups of water
            t_12_1= remaining_cups/2;
            t_3_5=remaining_cups/2;

            //Display results in labels
            lblDwakeup.setText(String.valueOf(wakeup+" cup(s) of water"));
            lblDAexercise.setText(String.valueOf(activity_cups+" cup(s) of water"));
            
            lblDAbreakfast.setText(String.valueOf(t10_11+" cup of water/juice)"));
            lblD10_11.setText(String.valueOf(t_12_1+" cup(s) of water"));
            lblD12_1.setText(String.valueOf(blunch+" cup(s) of water"));
            lblDblunch.setText(String.valueOf(alunch+" cup(s) of water"));
            lblDAlunch.setText(String.valueOf(t_3_5+" cup(s) of water"));
            lblD3_5.setText(String.valueOf(adinner+" cup(s) of water"));
            lblDAdinner.setText(String.valueOf(abreakfast+" cup(s) of water"));
        }
        else if(hasactivity==1){
            //set excercise cups of water 
            bexercise=activity_cups/2;
            aexercise=activity_cups/2;

            //find remaining cups of water
            float remaining_cups=cups-wakeup-abreakfast-t10_11-blunch-alunch-adinner-activity_cups;
            
            //Display remaining cups of water
            t_12_1= remaining_cups/2;
            t_3_5=remaining_cups/2;

            //Display results in labels
            lblDwakeup.setText(String.valueOf(wakeup+" cup(s) of water"));
            lblDAexercise.setText(String.valueOf(activity_cups+" cup(s) of water"));
            
            lblDAbreakfast.setText(String.valueOf(t10_11+" cup of water/juice)"));
            lblD10_11.setText(String.valueOf(t_12_1+" cup(s) of water"));
            lblD12_1.setText(String.valueOf(blunch+" cup(s) of water"));
            lblDblunch.setText(String.valueOf(alunch+" cup(s) of water"));
            lblDAlunch.setText(String.valueOf(t_3_5+" cup(s) of water"));
            lblD3_5.setText(String.valueOf(adinner+" cup(s) of water"));
            lblDAdinner.setText(String.valueOf(abreakfast+" cup(s) of water"));
        }
        
    }
        
    //Check units combo box selected or no and enable or disable feilds according to that
    private int check()
    {       
        if (cmbUnits.getSelectedIndex()==-1 || cmbUnits.getSelectedIndex()==0) 
        {
            //Set disable Metric, Imperial controls (lbs, feet inches)
            txtKg.setEnabled(false);
            txtcm.setEnabled(false);
            txtPounds.setEnabled(false);
            txtFeet.setEnabled(false);
            txtInches.setEnabled(false);
            txtAge.setEnabled(false);
            cmbActivity.setEnabled(false);
            
            //set is not selected 
            isnull=1;
            
            //clear all values
            txtKg.setText("");
            txtcm.setText("");
            txtPounds.setText("");
            txtFeet.setText("");
            txtInches.setText("");
        }
        else if (cmbUnits.getSelectedIndex()==1) {
            //check metric feilds is emty or not 
            if (txtKg.getText().isEmpty()) 
            {
                isnull=1;
                txtKg.requestFocus();
            }
            else if (txtcm.getText().isEmpty()) 
            {
                isnull=1;
                txtcm.requestFocus();
            }
            else if (txtAge.getText().isEmpty()) 
            {
                isnull=1;
                txtAge.requestFocus();
            }
            else
            {
                isnull=0;
            }
            
            if (cmbActivity.getSelectedIndex()==0) {
                isnull=1;
            }
            else{
                isnull=0;
                
            }
            
            /*Set enable Metric controls(Kg,cm)
            disable Imperial controls (lbs, feet inches)*/
            txtKg.setEnabled(true);
            txtcm.setEnabled(true);
            txtPounds.setEnabled(false);
            txtFeet.setEnabled(false);
            txtInches.setEnabled(false);
            txtAge.setEnabled(true);
            cmbActivity.setEnabled(true);
            //clear other feild text
            txtPounds.setText("");
            txtFeet.setText("");
            txtInches.setText("");
        }
        else if (cmbUnits.getSelectedIndex()==2) {
            
            //check imperial feilds is emty or not 
            if (txtPounds.getText().isEmpty()) 
            {
                isnull=1;
                txtPounds.requestFocus();
            }
            else if (txtFeet.getText().isEmpty()) 
            {
                isnull=1;
                txtFeet.requestFocus();
            }
            else if (txtInches.getText().isEmpty()) 
            {
                txtInches.setText("0");
                txtAge.requestFocus();
            }
            else if (txtAge.getText().isEmpty()) 
            {
                isnull=1;
                txtAge.requestFocus();
            }
            else
            {
                isnull=0;
            }
            
            if (cmbActivity.getSelectedIndex()==0) {
                activity_cups=0;
            }
            
            /*Set disable Metric controls(Kg,cm)
            enable Imperial controls (lbs, feet inches)*/
            txtKg.setEnabled(false);
            txtcm.setEnabled(false);
            txtPounds.setEnabled(true);
            txtFeet.setEnabled(true);
            txtInches.setEnabled(true);
            txtAge.setEnabled(true);
            cmbActivity.setEnabled(true);
            
            //clear metric fields values
            txtKg.setText("");
            txtcm.setText("");
            
            
        }
        return isnull; //return the value
    }
    
    //Get data from user
    public  void GetData()
    {
        if (cmbUnits.getSelectedIndex()==-1 || cmbUnits.getSelectedIndex()==0) 
        {
            //code here when cmbUNits not selected or seelected index is 0
        }
        else if (cmbUnits.getSelectedIndex()==1) { 
            //Get feilds value and assign to the variables
            kg = Float.parseFloat(txtKg.getText());           
            cm = Float.parseFloat(txtcm.getText());            
            age = Float.parseFloat(txtAge.getText());
            
            //call some convert methods
            Convert_Feet_inches_to_cm();
            Convert_cm_to_m();
            Convert_KG_to_pounds();
            Convert_cm_to_feetinches();
            
            //call BMI find function
            findBmi();
            
            //call Daily water intake calulation method
            watercal();
            
            //Display value in labels
            lblDkg.setText(String.valueOf(kg));
            lblDcm.setText(String.valueOf(cm));
            lblDlbs.setText(String.valueOf(con_pounds));
            lblDm.setText(String.valueOf(height_in_m));
            lblDFeet.setText(String.valueOf(con_feet));
        }
        else if (cmbUnits.getSelectedIndex()==2) {
            
            //Get values from fields
            age = Float.parseFloat(txtAge.getText());            
            pounds = Float.parseFloat(txtPounds.getText());            
            feet = Float.parseFloat(txtFeet.getText());
            inches = Float.parseFloat(txtInches.getText());
            
            //call some convert methods
            Convert_pounds_to_KG();
            Convert_Feet_inches_to_cm();
            Convert_cm_to_m();
            
            //call BMI find function
            findBmi();
            
            //call Daily water intake calulation method
            watercal();
            
            //Display value in labels
            lblDFeet.setText(String.valueOf(feet) + " F "+ String.valueOf(inches)+" In");
            lblDkg.setText(String.valueOf(con_kg));
            lblDcm.setText(String.valueOf(con_cm));
            lblDlbs.setText(String.valueOf(con_pounds));
            lblDm.setText(String.valueOf(height_in_m));
        }
    }
	
    //Display Final outputs
    public void Display()
    {
        GetData();
    }
    
    private void clearall()
    {
        txtKg.setText("");
        txtcm.setText("");
        txtPounds.setText("");
        txtFeet.setText("");
        txtInches.setText("");
        txtAge.setText("");
        cmbUnits.setSelectedIndex(0);
        cmbActivity.setSelectedIndex(0);
    }
    
    /*-----Start of converters methods-----*/
    
    //Convert weight Kg to pounds 
    private  void Convert_KG_to_pounds()
    {
        con_pounds= Roundup((onekg_pnd*kg),1);
    }

    //Convert weight pounds(lbs) to Kg
    private  void Convert_pounds_to_KG()
    {
        con_kg= Roundup((pounds/onekg_pnd),1);
    }
    
    //Convert Feet and inches to centimeter
    private  void Convert_Feet_inches_to_cm()
    {
        if (cmbUnits.getSelectedIndex()==1)
        {
            con_cm=Roundup(Float.parseFloat(txtcm.getText()),0);
        }
        else if (cmbUnits.getSelectedIndex()==2)
        {
            con_inches=(feet*12)+inches;
            con_cm=Roundup(con_inches*2.54f,0);// 2.54cm = 1 inch
        }
    }	  
    
    //Convert tocentimeters to Feet and Inches
    private void Convert_cm_to_feetinches()
    {
        float a =Float.parseFloat(txtcm.getText())*0.394f;
        
        //Convert to 2 decimal places and assign value to con_feet variable
        con_feet=Roundup(a/12,2);
        
    }
    
    private void Convert_cm_to_m()
    {
        height_in_m=Roundup((con_cm/100),2);
    }
  
    //Round values given decimal value
    private float Roundup(float round_value, int decemal_places)
    {
        float Rounded_Val;
        
        BigDecimal bd = new BigDecimal(round_value).setScale(decemal_places,RoundingMode.HALF_UP);
        return  Rounded_Val= (float) bd.doubleValue();
    }
        
    /*-----End of converters methods-----*/
    
     //Find BMI 
    private void findBmi()
    {        
        String unit="";//variable for display unit of measure
        if (cmbUnits.getSelectedIndex()==1)
        {
            //weight in kg & height in meter
            bmi=Roundup(kg/(height_in_m*height_in_m ),2);
            unit="kg/m2";
        }
        else if (cmbUnits.getSelectedIndex()==2)
        {
            //formula for imperial 
            bmi=Roundup(703*pounds/(con_inches*con_inches),2);
            unit="lb/in2";
        }
        
        //Display BMI and what type of your weight
        if (bmi<18.5) 
        {
            lblDbmi.setText(String.valueOf(bmi +" "+unit));
            lblDbmidesc.setText("you are in Under weight");
            lblDbmidesc.setForeground(Color.red);
            
            imgsad.setVisible(true);
            imgsad.setEnabled(true);
        }
        else if (bmi>18.5 && bmi<=24.9) 
        {
            lblDbmi.setText(String.valueOf(bmi+" "+unit));
            lblDbmidesc.setText("you are in Normal weight");
            lblDbmidesc.setForeground(Color.blue);
            
            imgsad.setVisible(true);
            imgsad.setEnabled(false);
        }
        else if (bmi>=25 && bmi<=29.9) 
        {
            lblDbmi.setText(String.valueOf(bmi+" "+unit));
            lblDbmidesc.setText("you are in Over weight");
            lblDbmidesc.setForeground(Color.red);
            
            imgsad.setVisible(true);
            imgsad.setEnabled(true);
            
        }
        else if (bmi>=30) 
        {
            lblDbmi.setText(String.valueOf(bmi +" "+unit));
            lblDbmidesc.setText("you are in Heavy weight");
            lblDbmidesc.setForeground(Color.red);
            
            //Set image visible or not
            imgsad.setVisible(true);
            imgsad.setEnabled(true);
        }
    }
    
    //Get ounces according to activity time
    private void getactivitywater()
    {
        if (cmbActivity.getSelectedIndex()==0)
        {
            activity=0;//no Activity
        }
        else if (cmbActivity.getSelectedIndex()==1)
        {
            activity=12; //ounces for 30 mins activity
        }
        else if (cmbActivity.getSelectedIndex()==2)
        {
            activity=24; //ounces for 1 hour activity
        }
    }
    
    //Water calculation
    private void watercal()
    {        
        float ano=0,wt=0,water=0;
        //getamountagewise to cal water intake
        if (Integer.valueOf(txtAge.getText())<30) 
        {
            ano=40;
        }
        else if (Integer.valueOf(txtAge.getText())>=30 && Integer.valueOf(txtAge.getText())<=75) 
        {
            ano=35;
        }
        else if (Integer.valueOf(txtAge.getText())>75 ) 
        {
            ano=30;
        }
        getactivitywater();
        
        //calculate water intake 
        if (cmbUnits.getSelectedIndex()==1)//kg or m or cc
        {
            water =(float) ((con_pounds/2.2*ano)/28.3)+ activity;
            wt = Roundup(water,2);
            lblDwaterintake.setText(String.valueOf(wt + " Ounces"));
        }
        else if (cmbUnits.getSelectedIndex()==2)//lbs or feet and inch
        {
            water = (float)((pounds/2.2*ano)/28.3) + activity ;
            wt = Roundup(water,2);
            lblDwaterintake.setText(String.valueOf(wt + " Ounces"));
        }
        
        float aa=wt*0.0296f;
          liters =Roundup(aa,2);
        lblDliters.setText(String.valueOf(liters + " Liters"));
        float con_cups=wt/8;
        cups=Roundup(con_cups,0);
        lblDcups.setText(String.valueOf(cups + " Cups"));
        
        //call water schedule method
        water_schedule();
    }

    
    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        System.exit(0); //exit the system
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnCalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalculateActionPerformed
        //check feilds selected or empty
        if (check()!=1) 
        {
            Display();            
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Please select and fill values");
        }
    }//GEN-LAST:event_btnCalculateActionPerformed

    private void btnClearallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearallActionPerformed
        clearall();
    }//GEN-LAST:event_btnClearallActionPerformed

    private void cmbUnitsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbUnitsActionPerformed
        check();
    }//GEN-LAST:event_cmbUnitsActionPerformed

    private void cmbActivityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbActivityActionPerformed
        getactivitywater();
    }//GEN-LAST:event_cmbActivityActionPerformed

    private void txtKgKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKgKeyPressed
       /* String value = txtKg.getText();
        int l = value.length();
        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9') {
           txtKg.setEditable(true);
        } else {
           txtKg.setEditable(false);  
        }*/
    }//GEN-LAST:event_txtKgKeyPressed

    int Xmouse,Ymouse;
    private void pnlContainerMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlContainerMouseDragged
        
        /*int x = evt.getXOnScreen();
        int y = evt.getXOnScreen();
        
        this.setLocation(x-Xmouse,y-Ymouse);*/
    }//GEN-LAST:event_pnlContainerMouseDragged

    private void pnlContainerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlContainerMouseClicked
        //Xmouse=evt.getX();
        //Ymouse=evt.getY();
    }//GEN-LAST:event_pnlContainerMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.setState(Frame.ICONIFIED);
    }//GEN-LAST:event_jButton1ActionPerformed

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WTcal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WTcal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WTcal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WTcal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new WTcal().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCalculate;
    private javax.swing.JButton btnClearall;
    private javax.swing.JButton btnClose;
    private javax.swing.JComboBox cmbActivity;
    private javax.swing.JComboBox cmbUnits;
    private javax.swing.JLabel imgsad;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JLabel lblD10_11;
    private javax.swing.JLabel lblD12_1;
    private javax.swing.JLabel lblD3_5;
    private javax.swing.JLabel lblDAbreakfast;
    private javax.swing.JLabel lblDAdinner;
    private javax.swing.JLabel lblDAexercise;
    private javax.swing.JLabel lblDAlunch;
    private javax.swing.JLabel lblDFeet;
    private javax.swing.JLabel lblDblunch;
    private javax.swing.JLabel lblDbmi;
    private javax.swing.JLabel lblDbmidesc;
    private javax.swing.JLabel lblDcm;
    private javax.swing.JLabel lblDcups;
    private javax.swing.JLabel lblDkg;
    private javax.swing.JLabel lblDlbs;
    private javax.swing.JLabel lblDliters;
    private javax.swing.JLabel lblDm;
    private javax.swing.JLabel lblDwakeup;
    private javax.swing.JLabel lblDwaterintake;
    private javax.swing.JLabel lblKg;
    private javax.swing.JLabel lblcm;
    private javax.swing.JPanel pnlContainer;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtFeet;
    private javax.swing.JTextField txtInches;
    private javax.swing.JTextField txtKg;
    private javax.swing.JTextField txtPounds;
    private javax.swing.JTextField txtcm;
    // End of variables declaration//GEN-END:variables
}
